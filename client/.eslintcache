[{"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/index.tsx":"1","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/reportWebVitals.ts":"2","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/App.tsx":"3","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/landingPage.tsx":"4","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/registerPage.tsx":"5","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/loginPage.tsx":"6","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/LandingPage.tsx":"7","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/LoginPage.tsx":"8","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/RegisterPage.tsx":"9","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/reducers/reducer.ts":"10","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/actions.ts":"11","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/index.ts":"12","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/types.ts":"13","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/hoc/auth.tsx":"14"},{"size":934,"mtime":1611168000854,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1610735978779,"results":"17","hashOfConfig":"16"},{"size":635,"mtime":1611769549263,"results":"18","hashOfConfig":"16"},{"size":159,"mtime":1610907252535,"results":"19","hashOfConfig":"16"},{"size":143,"mtime":1610907229432,"results":"20","hashOfConfig":"16"},{"size":1025,"mtime":1610907345043,"results":"21","hashOfConfig":"16"},{"size":633,"mtime":1611482871740,"results":"22","hashOfConfig":"16"},{"size":2059,"mtime":1611769549268,"results":"23","hashOfConfig":"16"},{"size":2407,"mtime":1611769549268,"results":"24","hashOfConfig":"16"},{"size":590,"mtime":1611769549263,"results":"25","hashOfConfig":"16"},{"size":1030,"mtime":1611429749708,"results":"26","hashOfConfig":"16"},{"size":94,"mtime":1611168000842,"results":"27","hashOfConfig":"16"},{"size":469,"mtime":1611769549263,"results":"28","hashOfConfig":"16"},{"size":1447,"mtime":1611769549264,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17obnl4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/index.tsx",[],["63","64"],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/reportWebVitals.ts",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/App.tsx",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/landingPage.tsx",["65"],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/registerPage.tsx",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/loginPage.tsx",["66","67","68"],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/LandingPage.tsx",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/LoginPage.tsx",["69","70","71","72"],"import React, {useState, ChangeEvent, FormEvent, Dispatch,} from 'react'\nimport styled from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../modules/actions';\nimport { withRouter } from 'react-router-dom';\nimport {RootState} from '../modules/reducers/index'\nimport { UserState } from '../modules';\nimport { store } from '..';\n\n\nconst LoginBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100vh;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Button = styled.button`\n    background:black;\n    color:white;\n    cursor:pointer;\n    outline:none;\n    border:none;\n    border-radius:4px;\n    font-size:16px;\n    padding-left:16px;\n    padding-right:16px;\n    height:100%;\n    font-weight:bold;\n    &:hover{background: #495057;}\n`;\n\n\n\nfunction LoginPage (props:any) {\n    const [inputs,setInputs] = useState({\n        email:'',\n        password:''\n    });\n    const {email,password} = inputs\n\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\n        const {value,name} =e.target ;\n        setInputs({\n            ...inputs,\n            [name] : value\n        });\n    }\n\n    const dispatch = useDispatch();\n\n    \n    // const userInfo = useSelector((state:RootState) =>state.userReducer.userState );\n\n    \n    const onSubmit = (e:FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        dispatch<any>(loginUser(inputs))\n            .then((response: { payload: { loginSuccess: boolean; }; })=>{\n                if(response.payload.loginSuccess){\n                    props.history.push('/')\n                }else{\n                    alert('Routing Error')\n                }\n            })\n        \n        // if(userInfo.loginSuccess){\n        //     props.history.push('/')\n        // }else{\n        //     alert('Routing Error')\n        // }\n\n    }\n\n    return (\n        <LoginBlock>\n            <Form onSubmit={onSubmit}>\n                <label>Email</label>\n                <input type='email' name='email' onChange={onChange} value={email}/>\n                <label>Password</label>\n                <input type=\"password\" name='password' onChange={onChange} value={password}/>\n                <br/>\n                <Button type='submit'>Login</Button>\n            </Form>\n        </LoginBlock>\n        \n        \n    );\n}\n\nexport default withRouter(LoginPage);","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/components/RegisterPage.tsx",["73","74"],"import React, {useState, ChangeEvent, FormEvent}from 'react';\nimport styled from 'styled-components';\nimport {useDispatch} from'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules';\nimport {RegisterUserProps} from '../modules/actions'\nimport { report } from 'process';\n\nconst RegisterBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100vh;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Button = styled.button`\n    background:black;\n    color:white;\n    cursor:pointer;\n    outline:none;\n    border:none;\n    border-radius:4px;\n    font-size:16px;\n    padding-left:16px;\n    padding-right:16px;\n    height:100%;\n    font-weight:bold;\n    &:hover{background: #495057;}\n`;\n\nfunction RegisterPage (props:any) {\n    const [inputs,setInputs] = useState({\n        email:'',\n        password:'',\n        name:'',\n        confirmPassword:''\n    });\n    const {email,password,name,confirmPassword} = inputs\n\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\n        const {value,name} =e.target ;\n        setInputs({\n            ...inputs,\n            [name] : value\n        });\n    }\n\n    const dispatch = useDispatch();\n\n    const onSubmit = (e:FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        dispatch<any>(registerUser(inputs))\n            .then((response:{ payload: { success: boolean; }; }) => {\n                if(response.payload.success){\n                    props.history.push('/login')\n                }else{\n                    alert('Failed to sign up')\n                }\n            })\n\n    }\n\n    return (\n        <RegisterBlock>\n            <Form onSubmit={onSubmit}>\n                <label>Name</label>\n                <input type=\"text\" name='name' onChange={onChange} value={name}/>\n                <label>Email</label>\n                <input type='email' name='email' onChange={onChange} value={email}/>\n                <label>Password</label>\n                <input type=\"password\" name='password' onChange={onChange} value={password}/>\n                <label>Comfirm Password</label>\n                <input type=\"password\" name='confirmPassword' onChange={onChange} value={confirmPassword}/>\n                <br/>\n                <Button type='submit'>회원가입</Button>\n            </Form>\n        </RegisterBlock>\n        \n        \n    );\n}\n\nexport default withRouter(RegisterPage);","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/reducers/reducer.ts",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/actions.ts",["75"],"import axios from 'axios';\nimport {createAction} from 'typesafe-actions';\n\ntype LoginUserProps = {\n    email:string;\n    password:string;\n}\n\nexport type RegisterUserProps = {\n    email:string;\n    password:string;\n    name:string;\n}\n\n\n\nexport const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\n\nexport function loginUser (dataToSubmit: LoginUserProps){\n    const request = axios.post('/api/users/login',dataToSubmit)\n        .then(response=>response.data)\n    \n    return {\n        type:LOGIN_USER,\n        payload:request\n    }\n}\n\nexport function registerUser (dataToSubmit:RegisterUserProps) {\n    const request = axios.post('/api/users/register',dataToSubmit)\n        .then(response=>response.data)\n\n    return {\n        type:REGISTER_USER,\n        payload:request\n    }\n}\n\nexport function  auth(){\n    const request = axios.get('/api/users/auth')\n        .then(response => response.data)\n    \n    return{\n        type:AUTH_USER,\n        payload:request\n    }\n}","/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/index.ts",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/modules/types.ts",[],"/Users/lmnlm/Desktop/frontend/boiler-plate/client/src/hoc/auth.tsx",["76","77","78","79"],"import React,{useEffect} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { auth } from '../modules';\n\n\ntype AuthProp = null | false | true;\n\n\n\nfunction Auth(SpecificComponent:Function,option:AuthProp,adminRoute:AuthProp) {\n\n    //null    =>  아무나 출입이 가능한 페이지\n    //true    =>  로그인한 유저만 출입이 가능한 페이지\n    //false   =>  로그인한 유저는 출입 불가능한 페이지\n\n    function AuthenticationCheck(props:any){\n        const dispatch = useDispatch();\n        useEffect(()=>{\n            dispatch<any>(auth())\n                .then((response: any)=>{\n                    //로그인하지 않은 상태\n                    if(!response.payload.isAuth){\n                        if(option){\n                            props.history.push('/login')\n                        }\n                    }   else{\n                            //로그인 한 상태\n                            if(adminRoute && !response.payload.isAdmin){\n                                props.history.push('/')\n                            }else{\n                                if(option === false){\n                                    props.history.push('/')\n                                }\n                            }\n                        }\n                    \n            })\n        },[])    \n\n        return <SpecificComponent/>\n    }\n\n    return AuthenticationCheck\n};\n\nexport default Auth;\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":34,"column":12,"nodeType":"86","messageId":"87","endLine":34,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":34,"column":18,"nodeType":"86","messageId":"87","endLine":34,"endColumn":26},{"ruleId":"90","severity":2,"message":"91","line":34,"column":30,"nodeType":"86","endLine":34,"endColumn":38},{"ruleId":"84","severity":1,"message":"92","line":1,"column":50,"nodeType":"86","messageId":"87","endLine":1,"endColumn":58},{"ruleId":"84","severity":1,"message":"93","line":3,"column":23,"nodeType":"86","messageId":"87","endLine":3,"endColumn":34},{"ruleId":"84","severity":1,"message":"94","line":6,"column":9,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"95","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":19},{"ruleId":"84","severity":1,"message":"96","line":6,"column":9,"nodeType":"86","messageId":"87","endLine":6,"endColumn":26},{"ruleId":"84","severity":1,"message":"97","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":16},{"ruleId":"84","severity":1,"message":"98","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"84","severity":1,"message":"99","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":16},{"ruleId":"84","severity":1,"message":"92","line":2,"column":25,"nodeType":"86","messageId":"87","endLine":2,"endColumn":33},{"ruleId":"84","severity":1,"message":"100","line":11,"column":11,"nodeType":"86","messageId":"87","endLine":11,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":48,"column":11,"nodeType":"103","endLine":48,"endColumn":13,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"loginPage\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'Dispatch' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'UserState' is defined but never used.","'RegisterUserProps' is defined but never used.","'report' is defined but never used.","'createAction' is defined but never used.","'Action' is defined but never used.","'AuthProps' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"110","text":"111"},[1435,1437],"[dispatch, props.history]"]